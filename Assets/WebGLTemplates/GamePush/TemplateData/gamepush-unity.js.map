{"version":3,"file":"gamepush-unity.js","mappings":"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","sources":["webpack://gamepush_unity/./src/GamePushUnity.js","webpack://gamepush_unity/./src/index.js"],"sourcesContent":["export default class GamePushUnity {\r\n    constructor(gp, unity) {\r\n        this.gp = gp;\r\n        this.unity = unity;\r\n\r\n        this.gp.player.ready.then(() => {\r\n            this.trigger('CallSDKReady');\r\n            this.trigger('CallPlayerReady');\r\n        });\r\n\r\n        this.gp.player.on('change', () => this.trigger('CallPlayerChange'));\r\n        this.gp.player.on('sync', (success) => {\r\n            this.trigger(success ? 'CallPlayerSyncComplete' : 'CallPlayerSyncError');\r\n        });\r\n        this.gp.player.on('load', (success) => {\r\n            this.trigger(success ? 'CallPlayerLoadComplete' : 'CallPlayerLoadError');\r\n        });\r\n        this.gp.player.on('login', (success) => {\r\n            this.trigger(success ? 'CallPlayerLoginComplete' : 'CallPlayerLoginError');\r\n        });\r\n\r\n        this.gp.player.on('fetchFields', (success) => {\r\n            if (success) {\r\n                this.trigger('CallPlayerFetchFieldsComplete', JSON.stringify(this.gp.player.fields.map((field) => ({ ...field, defaultValue: field.default }))));\r\n            } else {\r\n                this.trigger('CallPlayerFetchFieldsError');\r\n            }\r\n        });\r\n\r\n        // leaderboard\r\n        this.gp.leaderboard.on('open', () => this.trigger('CallLeaderboardOpen'));\r\n        this.gp.leaderboard.on('close', () => this.trigger('CallLeaderboardClose'));\r\n\r\n        // achievements\r\n        this.gp.achievements.on('open', () => this.trigger('CallAchievementsOpen'));\r\n        this.gp.achievements.on('close', () => {\r\n            this.trigger('CallAchievementsClose');\r\n            window.focus();\r\n        });\r\n\r\n        this.gp.achievements.on('unlock', () => this.trigger('CallAchievementsUnlock'));\r\n        this.gp.achievements.on('error:unlock', () => this.trigger('CallAchievementsUnlockError'));\r\n\r\n        // games collections\r\n        this.gp.gamesCollections.on('open', () => this.trigger('CallGamesCollectionsOpen'));\r\n        this.gp.gamesCollections.on('close', () => {\r\n            this.trigger('CallGamesCollectionsClose');\r\n            window.focus();\r\n        });\r\n\r\n        // fullscreen\r\n        this.gp.fullscreen.on('open', () => this.trigger('CallFullscreenOpen'));\r\n        this.gp.fullscreen.on('close', () => this.trigger('CallFullscreenClose'));\r\n        this.gp.fullscreen.on('change', () => this.trigger('CallFullscreenChange'));\r\n\r\n        // ads\r\n        this.gp.ads.on('start', () => this.trigger('CallAdsStart'));\r\n        this.gp.ads.on('close', (success) => {\r\n            this.trigger('CallAdsClose', success);\r\n            window.focus();\r\n        });\r\n\r\n        this.gp.ads.on('fullscreen:start', () => this.trigger('CallAdsFullscreenStart'));\r\n        this.gp.ads.on('fullscreen:close', (success) => this.trigger('CallAdsFullscreenClose', success));\r\n\r\n        this.gp.ads.on('preloader:start', () => this.trigger('CallAdsPreloaderStart'));\r\n        this.gp.ads.on('preloader:close', (success) => this.trigger('CallAdsPreloaderClose', success));\r\n\r\n        this.gp.ads.on('rewarded:start', () => this.trigger('CallAdsRewardedStart'));\r\n        this.gp.ads.on('rewarded:close', (success) => this.trigger('CallAdsRewardedClose', (success)));\r\n        this.gp.ads.on('rewarded:reward', () => this.trigger('CallAdsRewardedReward', this.lastRewardedTag));\r\n\r\n        this.gp.ads.on('sticky:start', () => this.trigger('CallAdsStickyStart'));\r\n        this.gp.ads.on('sticky:close', () => this.trigger('CallAdsStickyClose'));\r\n        this.gp.ads.on('sticky:refresh', () => this.trigger('CallAdsStickyRefresh'));\r\n        this.gp.ads.on('sticky:render', () => this.trigger('CallAdsStickyRender'));\r\n\r\n        // socials\r\n        this.gp.socials.on('share', (success) => {\r\n            this.trigger('CallSocialsShare', success);\r\n            window.focus();\r\n        });\r\n        this.gp.socials.on('post', (success) => {\r\n            this.trigger('CallSocialsPost', success);\r\n            window.focus();\r\n        });\r\n        this.gp.socials.on('invite', (success) => {\r\n            this.trigger('CallSocialsInvite', success);\r\n            window.focus();\r\n        });\r\n        this.gp.socials.on('joinCommunity', (success) => {\r\n            this.trigger('CallSocialsJoinCommunity', success);\r\n            window.focus();\r\n        });\r\n\r\n        // gp\r\n        this.gp.on('change:language', (lang) => this.trigger('CallChangeLanguage', lang));\r\n        this.gp.on('change:avatarGenerator', (ag) => this.trigger('CallChangeAvatarGenerator', ag));\r\n        this.gp.on('pause', () => this.trigger('CallOnPause'));\r\n        this.gp.on('resume', () => this.trigger('CallOnResume'));\r\n\r\n        //documents\r\n        this.gp.documents.on('open', () => this.trigger('CallOnDocumentsOpen'));\r\n        this.gp.documents.on('close', () => {\r\n            this.trigger('CallOnDocumentsClose');\r\n            window.focus();\r\n        });\r\n\r\n        this.gp.documents.on('fetch', (document) => this.trigger('CallOnDocumentsFetchSuccess', document.content));\r\n        this.gp.documents.on('error:fetch', () => this.trigger('CallOnDocumentsFetchError'));\r\n\r\n\r\n        // channels\r\n        this.gp.channels.on('createChannel', (channel) => {\r\n            this.trigger('CallOnCreateChannel', JSON.stringify(mapChannel(channel)));\r\n        });\r\n        this.gp.channels.on('error:createChannel', (err) => this.trigger('CallOnCreateChannelError'));\r\n\r\n        this.gp.channels.on('updateChannel', (channel) => {\r\n            this.trigger('CallOnUpdateChannel', JSON.stringify(mapChannel(channel)));\r\n        });\r\n        this.gp.channels.on('error:updateChannel', (err) => this.trigger('CallOnUpdateChannelError'));\r\n\r\n        this.gp.channels.on('deleteChannel', () => this.trigger('CallOnDeleteChannelSuccess'));\r\n        this.gp.channels.on('event:deleteChannel', (channel) => { this.trigger('CallOnDeleteChannelEvent', channel.id); });\r\n        this.gp.channels.on('error:deleteChannel', (err) => this.trigger('CallOnDeleteChannelError'));\r\n\r\n        this.gp.channels.on('fetchChannel', (channel) => {\r\n            this.trigger('CallOnFetchChannel', JSON.stringify(mapChannel(channel)));\r\n        });\r\n        this.gp.channels.on('error:fetchChannel', (err) => this.trigger('CallOnFetchChannelError'));\r\n\r\n        this.gp.channels.on('fetchChannels', (result) => {\r\n            this.trigger('CallOnFetchChannelsCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchChannels', JSON.stringify(result.items.map(mapChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchChannels', (err) => this.trigger('CallOnFetchChannelsError'));\r\n\r\n        this.gp.channels.on('fetchMoreChannels', (result) => {\r\n            this.trigger('CallOnFetchMoreChannelsCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreChannels', JSON.stringify(result.items.map(mapChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchMoreChannels', (err) => this.trigger('CallOnFetchMoreChannelsError'));\r\n\r\n\r\n        this.gp.channels.on('join', () => this.trigger('CallOnJoinSuccess'));\r\n        this.gp.channels.on('event:join', (member) => { this.trigger('CallOnJoinEvent', JSON.stringify(member)); });\r\n        this.gp.channels.on('error:join', (err) => this.trigger('CallOnJoinError'));\r\n\r\n\r\n        this.gp.channels.on('event:joinRequest', (joinRequest) => { this.trigger('CallOnJoinRequest', JSON.stringify(joinRequest)); });\r\n\r\n        this.gp.channels.on('cancelJoin', () => this.trigger('CallOnCancelJoinSuccess'));\r\n        this.gp.channels.on('event:cancelJoin', (joinRequest) => { this.trigger('CallOnCancelJoinEvent', JSON.stringify(joinRequest)); });\r\n        this.gp.channels.on('error:cancelJoin', (err) => this.trigger('CallOnCancelJoinError'));\r\n\r\n        this.gp.channels.on('leave', () => this.trigger('CallOnLeaveSuccess'));\r\n        this.gp.channels.on('event:leave', (memberLeave) => { this.trigger('CallOnLeaveEvent', JSON.stringify(memberLeave)); });\r\n        this.gp.channels.on('error:leave', (err) => this.trigger('CallOnLeaveError'));\r\n\r\n        this.gp.channels.on('kick', () => this.trigger('CallOnKick'));\r\n        this.gp.channels.on('error:kick', (err) => this.trigger('CallOnKickError'));\r\n\r\n        this.gp.channels.on('fetchMembers', (result) => {\r\n            this.trigger('CallOnFetchMembersCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMembers', JSON.stringify(result.items));\r\n        });\r\n        this.gp.channels.on('error:fetchMembers', (err) => this.trigger('CallOnFetchMembersError'));\r\n\r\n        this.gp.channels.on('fetchMoreMembers', (result) => {\r\n            this.trigger('CallOnFetchMoreMembersCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreMembers', JSON.stringify(result.items));\r\n        });\r\n        this.gp.channels.on('error:fetchMoreMembers', (err) => this.trigger('CallOnFetchMoreMembersError'));\r\n\r\n        this.gp.channels.on('mute', () => this.trigger('CallOnMuteSuccess'));\r\n        this.gp.channels.on('event:mute', (mute) => { this.trigger('CallOnMuteEvent', JSON.stringify(mute)); });\r\n        this.gp.channels.on('error:mute', (err) => this.trigger('CallOnMuteError'));\r\n\r\n        this.gp.channels.on('unmute', () => this.trigger('CallOnUnmuteSuccess'));\r\n        this.gp.channels.on('event:unmute', (mute) => { this.trigger('CallOnUnmuteEvent', JSON.stringify(mute)); });\r\n        this.gp.channels.on('error:unmute', (err) => this.trigger('CallOnUnmuteError'));\r\n\r\n        this.gp.channels.on('sendInvite', () => this.trigger('CallOnSendInvite'));\r\n        this.gp.channels.on('error:sendInvite', (err) => this.trigger('CallOnSendInviteError'));\r\n\r\n        this.gp.channels.on('event:invite', (invite) => { this.trigger('CallOnInvite', JSON.stringify(invite)); });\r\n\r\n        this.gp.channels.on('cancelInvite', () => this.trigger('CallOnCancelInviteSuccess'));\r\n        this.gp.channels.on('event:cancelInvite', (invite) => {\r\n            this.trigger('CallOnCancelInviteEvent', JSON.stringify(invite));\r\n        });\r\n        this.gp.channels.on('error:cancelInvite', (err) => this.trigger('CallOnCancelInviteError'));\r\n\r\n        this.gp.channels.on('acceptInvite', () => this.trigger('CallOnAcceptInvite'));\r\n        this.gp.channels.on('error:acceptInvite', (err) => this.trigger('CallOnAcceptInviteError'));\r\n\r\n\r\n        this.gp.channels.on('rejectInvite', () => this.trigger('CallOnRejectInviteSuccess'));\r\n        this.gp.channels.on('event:rejectInvite', (invite) => { this.trigger('CallOnRejectInviteEvent', JSON.stringify(invite)); });\r\n        this.gp.channels.on('error:rejectInvite', (err) => this.trigger('CallOnRejectInviteError'));\r\n\r\n        this.gp.channels.on('fetchInvites', (result) => {\r\n            this.trigger('CallOnFetchInvitesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchInvites', JSON.stringify(result.items.map(mapItemWithChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchInvites', (err) => this.trigger('CallOnFetchInvitesError'));\r\n\r\n\r\n        this.gp.channels.on('fetchMoreInvites', (result) => {\r\n            this.trigger('CallOnFetchMoreInvitesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreInvites', JSON.stringify(result.items.map(mapItemWithChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchMoreInvites', (err) => this.trigger('CallOnFetchMoreInvitesError'));\r\n\r\n\r\n        this.gp.channels.on('fetchChannelInvites', (result) => {\r\n            this.trigger('CallOnFetchChannelInvitesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchChannelInvites', JSON.stringify(result.items));\r\n        });\r\n        this.gp.channels.on('error:fetchChannelInvites', (err) => this.trigger('CallOnFetchChannelInvitesError'));\r\n\r\n\r\n        this.gp.channels.on('fetchMoreChannelInvites', (result) => {\r\n            this.trigger('CallOnFetchMoreChannelInvitesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreChannelInvites', JSON.stringify(result.items));\r\n        });\r\n        this.gp.channels.on('error:fetchMoreChannelInvites', (err) => this.trigger('CallOnFetchMoreChannelInvitesError'));\r\n\r\n\r\n        this.gp.channels.on('fetchSentInvites', (result) => {\r\n            this.trigger('CallOnFetchSentInvitesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchSentInvites', JSON.stringify(result.items.map(mapItemWithChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchSentInvites', (err) => this.trigger('CallOnFetchSentInvitesError'));\r\n\r\n\r\n        this.gp.channels.on('fetchMoreSentInvites', (result) => {\r\n            this.trigger('CallOnFetchMoreSentInvitesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreSentInvites', JSON.stringify(result.items.map(mapItemWithChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchMoreSentInvites', (err) => this.trigger('CallOnFetchMoreSentInvitesError'));\r\n\r\n\r\n        this.gp.channels.on('acceptJoinRequest', () => this.trigger('CallOnAcceptJoinRequest'));\r\n        this.gp.channels.on('error:acceptJoinRequest', (err) => this.trigger('CallOnAcceptJoinRequestError'));\r\n\r\n\r\n        this.gp.channels.on('rejectJoinRequest', () => this.trigger('CallOnRejectJoinRequestSuccess'));\r\n        this.gp.channels.on('event:rejectJoinRequest', (joinRequest) => {\r\n            this.trigger('CallOnRejectJoinRequestEvent', JSON.stringify(joinRequest));\r\n        });\r\n        this.gp.channels.on('error:rejectJoinRequest', (err) => this.trigger('CallOnRejectJoinRequestError'));\r\n\r\n\r\n        this.gp.channels.on('fetchJoinRequests', (result) => {\r\n            this.trigger('CallOnFetchJoinRequestsCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchJoinRequests', JSON.stringify(result.items));\r\n        });\r\n        this.gp.channels.on('error:fetchJoinRequests', (err) => this.trigger('CallOnFetchJoinRequestsError'));\r\n\r\n\r\n\r\n        this.gp.channels.on('fetchMoreJoinRequests', (result) => {\r\n            this.trigger('CallOnFetchMoreJoinRequestsCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreJoinRequests', JSON.stringify(result.items));\r\n        });\r\n        this.gp.channels.on('error:fetchMoreJoinRequests', (err) => this.trigger('CallOnFetchMoreJoinRequestsError'));\r\n\r\n\r\n\r\n        this.gp.channels.on('fetchSentJoinRequests', (result) => {\r\n            this.trigger('CallOnFetchSentJoinRequestsCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchSentJoinRequests', JSON.stringify(result.items.map(mapItemWithChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchSentJoinRequests', (err) => this.trigger('CallOnFetchSentJoinRequestsError'));\r\n\r\n\r\n        this.gp.channels.on('fetchMoreSentJoinRequests', (result) => {\r\n            this.trigger('CallOnFetchMoreSentJoinRequestsCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreSentJoinRequests', JSON.stringify(result.items.map(mapItemWithChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchMoreSentJoinRequests', (err) => this.trigger('CallOnFetchMoreSentJoinRequestsError'));\r\n\r\n        this.gp.channels.on('sendMessage', (message) => { this.trigger('CallOnSendMessage', JSON.stringify(message)); });\r\n        this.gp.channels.on('error:sendMessage', (err) => this.trigger('CallOnSendMessageError'));\r\n\r\n        this.gp.channels.on('event:message', (message) => { this.trigger('CallOnMessage', JSON.stringify(message)); });\r\n\r\n        this.gp.channels.on('editMessage', (message) => { this.trigger('CallOnEditMessageSuccess', JSON.stringify(message)); });\r\n        this.gp.channels.on('event:editMessage', (message) => { this.trigger('CallOnEditMessageEvent', JSON.stringify(message)); });\r\n        this.gp.channels.on('error:editMessage', (err) => this.trigger('CallOnEditMessageError'));\r\n\r\n\r\n        this.gp.channels.on('deleteMessage', () => this.trigger('CallOnDeleteMessageSuccess'));\r\n        this.gp.channels.on('event:deleteMessage', (message) => { this.trigger('CallOnDeleteMessageEvent', JSON.stringify(message)); });\r\n        this.gp.channels.on('error:deleteMessage', (err) => this.trigger('CallOnDeleteMessageError'));\r\n    }\r\n\r\n    trigger(eventName, value) {\r\n        this.unity.SendMessage('GamePushSDK', eventName, this.toUnity(value));\r\n    }\r\n\r\n    toUnity(value) {\r\n        switch (typeof (value)) {\r\n            case 'boolean': {\r\n                return String(value);\r\n            }\r\n            case 'number': {\r\n                return value;\r\n            }\r\n            case 'string': {\r\n                return value;\r\n            }\r\n            case 'object': {\r\n                return JSON.stringify(value);\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n\r\n\r\n    mapItemsWithChannel(items = {}) {\r\n        return {\r\n            ...items,\r\n            ch_private: items.private\r\n        };\r\n    }\r\n\r\n    Language() {\r\n        return this.gp.language;\r\n    }\r\n    AvatarGenerator() {\r\n        return this.gp.avatarGenerator;\r\n    }\r\n    PlatformType() {\r\n        return this.gp.platform.type;\r\n    }\r\n    PlatformHasIntegratedAuth() {\r\n        return this.toUnity(this.gp.platform.hasIntegratedAuth);\r\n    }\r\n    PlatformIsExternalLinksAllowed() {\r\n        return this.toUnity(this.gp.platform.isExternalLinksAllowed);\r\n    }\r\n\r\n    AppTitle() {\r\n        return this.gp.app.title;\r\n    }\r\n    AppDescription() {\r\n        return this.gp.app.description;\r\n    }\r\n    AppImage() {\r\n        return this.gp.app.image;\r\n    }\r\n    AppUrl() {\r\n        return this.gp.app.url;\r\n    }\r\n\r\n\r\n    PlayerGetID() {\r\n        return this.gp.player.id;\r\n    }\r\n\r\n    PlayerGetScore() {\r\n        return this.gp.player.score;\r\n    }\r\n    PlayerSetScore(score) {\r\n        this.gp.player.score = Number(score);\r\n    }\r\n    PlayerAddScore(score) {\r\n        this.gp.player.score += Number(score);\r\n    }\r\n\r\n    PlayerGetName() {\r\n        return this.gp.player.name;\r\n    }\r\n    PlayerSetName(name) {\r\n        this.gp.player.name = name;\r\n    }\r\n\r\n    PlayerGetAvatar() {\r\n        return this.gp.player.avatar;\r\n    }\r\n    PlayerSetAvatar(src) {\r\n        this.gp.player.avatar = src;\r\n    }\r\n\r\n    PlayerGet(key) {\r\n        return this.toUnity(this.gp.player.get(key));\r\n    }\r\n\r\n    PlayerSetString(key, value) {\r\n        this.gp.player.set(key, value);\r\n    }\r\n    PlayerSetNumber(key, value) {\r\n        this.gp.player.set(key, value);\r\n    }\r\n    PlayerSetBool(key, value) {\r\n        if (value == \"True\")\r\n            value = true;\r\n        else if (value == \"False\")\r\n            value = false;\r\n        this.gp.player.set(key, value);\r\n    }\r\n    PlayerAdd(key, value) {\r\n        this.gp.player.add(key, Number(value));\r\n    }\r\n\r\n    PlayerHas(key) {\r\n        return this.toUnity(this.gp.player.has(key));\r\n    }\r\n\r\n    PlayerSetFlag(key, value) {\r\n        this.gp.player.set(key, !Boolean(value));\r\n    }\r\n    PlayerToggle(key) {\r\n        this.gp.player.toggle(key);\r\n    }\r\n\r\n    PlayerGetFieldName(key) {\r\n        return this.gp.player.getFieldName(key);\r\n    }\r\n    PlayerGetFieldVariantName(key, value) {\r\n        return this.gp.player.getFieldVariantName(key, value);\r\n    }\r\n    PlayerGetFieldVariantAt(key, index) {\r\n        const variant = this.gp.player.getField(key).variants[index];\r\n        return variant ? variant.value : '';\r\n    }\r\n    PlayerGetFieldVariantIndex(key, value) {\r\n        return this.gp.player.getField(key).variants.findIndex((v) => v.value === value);\r\n    }\r\n\r\n    PlayerReset() {\r\n        this.gp.player.reset();\r\n    }\r\n    PlayerRemove() {\r\n        this.gp.player.remove();\r\n    }\r\n    PlayerSync(override = false) {\r\n        return this.gp.player.sync({ override: Boolean(override) });\r\n    }\r\n    PlayerLoad() {\r\n        return this.gp.player.load();\r\n    }\r\n    PlayerLogin() {\r\n        return this.gp.player.login();\r\n    }\r\n    PlayerFetchFields() {\r\n        this.gp.player.fetchFields();\r\n    }\r\n\r\n    PlayerIsLoggedIn() {\r\n        return this.toUnity(this.gp.player.isLoggedIn);\r\n    }\r\n\r\n    PlayerHasAnyCredentials(key) {\r\n        return this.toUnity(this.gp.player.hasAnyCredentials);\r\n    }\r\n\r\n    PlayerIsStub(key) {\r\n        return this.toUnity(this.gp.player.isStub);\r\n    }\r\n\r\n\r\n    LeaderboardOpen(orderBy, order, limit, withMe, includeFields, displayFields) {\r\n        return this.gp.leaderboard\r\n            .open({\r\n                id: this.gp.player.id,\r\n                orderBy: orderBy\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                order,\r\n                limit,\r\n                withMe,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                displayFields: displayFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .catch(console.warn);\r\n    }\r\n\r\n    LeaderboardFetch(tag, orderBy, order, limit, withMe, includeFields) {\r\n        return this.gp.leaderboard\r\n            .fetch({\r\n                id: this.gp.player.id,\r\n                orderBy: orderBy\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                order,\r\n                limit,\r\n                withMe,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .then((leaderboardInfo) => {\r\n                this.trigger('CallLeaderboardFetchTag', tag);\r\n                this.trigger('CallLeaderboardFetch', JSON.stringify(leaderboardInfo.players));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallLeaderboardFetchError');\r\n            });\r\n    }\r\n\r\n    LeaderboardFetchPlayerRating(tag, orderBy, order) {\r\n        return this.gp.leaderboard\r\n            .fetchPlayerRating({\r\n                id: this.gp.player.id,\r\n                orderBy: orderBy\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                order,\r\n            })\r\n            .then((result) => {\r\n                this.trigger('CallLeaderboardFetchPlayerTag', tag);\r\n                this.trigger('CallLeaderboardFetchPlayer', result.player.position);\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallLeaderboardFetchPlayerError');\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    /* LEADER BOARD SCOPED */\r\n\r\n    LeaderboardScopedOpen(idOrTag, variant, order, limit, includeFields, displayFields, withMe) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.leaderboard\r\n            .openScoped({\r\n                ...query,\r\n                variant,\r\n                order,\r\n                limit,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                displayFields: displayFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                withMe,\r\n            })\r\n            .catch(console.warn);\r\n    }\r\n\r\n    LeaderboardScopedFetch(idOrTag, variant, order, limit, includeFields, withMe) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.leaderboard\r\n            .fetchScoped({\r\n                ...query,\r\n                variant,\r\n                order,\r\n                limit,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                withMe,\r\n            })\r\n            .then((leaderboardScopedInfo) => {\r\n                this.trigger('CallLeaderboardScopedFetchTag', idOrTag);\r\n                this.trigger('CallLeaderboardScopedFetchVariant', variant);\r\n                this.trigger('CallLeaderboardScopedFetch', JSON.stringify(leaderboardScopedInfo.players));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallLeaderboardScopedFetchError');\r\n            });\r\n    }\r\n\r\n    LeaderboardScopedPublishRecord(idOrTag, variant, override, key1, value1, key2, value2, key3, value3) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.leaderboard\r\n            .publishRecord({\r\n                ...query,\r\n                variant,\r\n                override: Boolean(override),\r\n                record: {\r\n                    [key1]: value1,\r\n                    [key2]: value2,\r\n                    [key3]: value3,\r\n                },\r\n            })\r\n            .then(() => {\r\n                this.trigger('CallLeaderboardScopedPublishRecordComplete');\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallLeaderboardScopedPublishRecordError');\r\n            });\r\n    }\r\n\r\n    LeaderboardScopedFetchPlayerRating(idOrTag, variant, includeFields) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.leaderboard\r\n            .fetchPlayerRatingScoped({\r\n                ...query,\r\n                variant,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .then((result) => {\r\n                this.trigger('CallLeaderboardScopedFetchPlayerTag', idOrTag);\r\n                this.trigger('CallLeaderboardScopedFetchPlayerVariant', variant);\r\n                this.trigger('CallLeaderboardScopedFetchPlayer', result.player.position);\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallLeaderboardFetchPlayerError');\r\n            });\r\n    }\r\n    /* LEADER BOARD SCOPED */\r\n\r\n\r\n\r\n    /* ACHIEVEMENTS */\r\n    AchievementsOpen() {\r\n        return this.gp.achievements.open().catch(console.warn);\r\n    }\r\n    AchievementsFetch() {\r\n        return this.gp.achievements\r\n            .fetch()\r\n            .then((result) => {\r\n                this.trigger('CallAchievementsFetch', JSON.stringify(result.achievements));\r\n                this.trigger('CallAchievementsFetchGroups', JSON.stringify(result.achievementsGroups));\r\n                this.trigger('CallPlayerAchievementsFetch', JSON.stringify(result.playerAchievements));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallAchievementsFetchError');\r\n            });\r\n    }\r\n    AchievementsUnlock(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.achievements\r\n            .unlock(query)\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    this.trigger('CallAchievementsUnlock', idOrTag);\r\n                    return;\r\n                }\r\n\r\n                this.trigger('CallAchievementsUnlockError');\r\n            })\r\n\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallAchievementsUnlockError');\r\n            });\r\n    }\r\n\r\n    AchievementsSetProgress(idOrTag, progress) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n\r\n        return this.gp.achievements\r\n            .setProgress({ ...query, progress })\r\n\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    this.trigger('CallAchievementsProgress', idOrTag);\r\n                    return;\r\n                }\r\n                this.trigger('CallAchievementsProgressError');\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallAchievementsProgressError');\r\n            });\r\n    }\r\n\r\n    AchievementsHas(idOrTag) {\r\n        return this.toUnity(this.gp.achievements.has(idOrTag));\r\n    }\r\n    AchievementsGetProgress(idOrTag) {\r\n        return this.gp.achievements.getProgress(idOrTag);\r\n    }\r\n    /* ACHIEVEMENTS */\r\n\r\n\r\n\r\n    /* PAYMENTS */\r\n    PaymentsFetchProducts() {\r\n        return this.gp.payments\r\n            .fetchProducts()\r\n            .then((result) => {\r\n                this.trigger('CallPaymentsFetchProducts', JSON.stringify(result.products));\r\n                this.trigger('CallPaymentsFetchPlayerPurcahses', JSON.stringify(result.playerPurchases));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsFetchProductsError');\r\n            });\r\n    }\r\n    PaymentsPurchase(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.payments\r\n            .purchase(query)\r\n            .then((result) => {\r\n\r\n                if (result.success) {\r\n                    this.trigger('CallPaymentsPurchase', idOrTag);\r\n                    window.focus();\r\n                    return;\r\n                }\r\n\r\n                this.trigger('CallPaymentsPurchaseError');\r\n\r\n                window.focus();\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsPurchaseError');\r\n                window.focus();\r\n            });\r\n    }\r\n    PaymentsConsume(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.payments\r\n            .consume(query)\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    this.trigger('CallPaymentsConsume', idOrTag);\r\n                    window.focus();\r\n                    return;\r\n                }\r\n\r\n                this.trigger('CallPaymentsConsumeError');\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsConsumeError');\r\n            });\r\n    }\r\n\r\n\r\n    PaymentsIsAvailable() {\r\n        return this.toUnity(this.gp.payments.isAvailable);\r\n    }\r\n\r\n\r\n    // Subscriptions\r\n    PaymentsIsSubscriptionsAvailable() {\r\n        return this.toUnity(this.gp.payments.isSubscriptionsAvailable);\r\n    }\r\n\r\n    PaymentsSubscribe(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.payments.subscribe(query)\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    this.trigger('CallPaymentsSubscribeSuccess', idOrTag);\r\n                } else {\r\n                    this.trigger('CallPaymentsSubscribeError');\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsSubscribeError');\r\n            });\r\n    }\r\n\r\n\r\n    PaymentsUnsubscribe(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.payments.unsubscribe(query)\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    this.trigger('CallPaymentsUnsubscribeSuccess', idOrTag);\r\n                } else {\r\n                    this.trigger('CallPaymentsUnsubscribeError');\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsUnsubscribeError');\r\n            });\r\n    }\r\n\r\n    // Subscriptions\r\n\r\n    /* PAYMENTS */\r\n\r\n    FullscreenOpen() {\r\n        return this.gp.fullscreen.open();\r\n    }\r\n    FullscreenClose() {\r\n        return this.gp.fullscreen.close();\r\n    }\r\n    FullscreenToggle() {\r\n        return this.gp.fullscreen.toggle();\r\n    }\r\n\r\n\r\n\r\n    AdsShowFullscreen() {\r\n        return this.gp.ads.showFullscreen();\r\n    }\r\n    AdsShowRewarded(idOrTag) {\r\n        this.lastRewardedTag = idOrTag;\r\n        return this.gp.ads.showRewardedVideo();\r\n    }\r\n    AdsShowPreloader() {\r\n        return this.gp.ads.showPreloader();\r\n    }\r\n    AdsShowSticky() {\r\n        return this.gp.ads.showSticky();\r\n    }\r\n    AdsCloseSticky() {\r\n        return this.gp.ads.closeSticky();\r\n    }\r\n    AdsRefreshSticky() {\r\n        return this.gp.ads.refreshSticky();\r\n    }\r\n\r\n\r\n    AdsIsAdblockEnabled() {\r\n        return this.toUnity(this.gp.ads.isAdblockEnabled);\r\n    }\r\n\r\n    AdsIsStickyAvailable() {\r\n        return this.toUnity(this.gp.ads.isStickyAvailable);\r\n    }\r\n    AdsIsFullscreenAvailable() {\r\n        return this.toUnity(this.gp.ads.isFullscreenAvailable);\r\n    }\r\n    AdsIsRewardedAvailable() {\r\n        return this.toUnity(this.gp.ads.isRewardedAvailable);\r\n    }\r\n    AdsIsPreloaderAvailable() {\r\n        return this.toUnity(this.gp.ads.isPreloaderAvailable);\r\n    }\r\n\r\n\r\n    AdsIsStickyPlaying() {\r\n        return this.toUnity(this.gp.ads.isStickyPlaying);\r\n    }\r\n    AdsIsFullscreenPlaying() {\r\n        return this.toUnity(this.gp.ads.isFullscreenPlaying);\r\n    }\r\n    AdsIsRewardedPlaying() {\r\n        return this.toUnity(this.gp.ads.isRewardedPlaying);\r\n    }\r\n    AdsIsPreloaderPlaying() {\r\n        return this.toUnity(this.gp.ads.isPreloaderPlaying);\r\n    }\r\n\r\n\r\n    AnalyticsHit(url) {\r\n        return this.gp.analytics.hit(url);\r\n    }\r\n    AnalyticsGoal(event, value) {\r\n        return this.gp.analytics.goal(event, value);\r\n    }\r\n    SocialsShare(text, url, image) {\r\n        return this.gp.socials.share({ text, url, image });\r\n    }\r\n    SocialsPost(text, url, image) {\r\n        return this.gp.socials.post({ text, url, image });\r\n    }\r\n    SocialsInvite(text, url, image) {\r\n        return this.gp.socials.invite({ text, url, image });\r\n    }\r\n    SocialsJoinCommunity() {\r\n        return this.gp.socials.joinCommunity();\r\n    }\r\n    SocialsCommunityLink() {\r\n        return this.toUnity(this.gp.socials.communityLink);\r\n    }\r\n\r\n    SocialsIsSupportsShare() {\r\n        return this.toUnity(this.gp.socials.isSupportsShare);\r\n    }\r\n    SocialsIsSupportsNativeShare() {\r\n        return this.toUnity(this.gp.socials.isSupportsNativeShare);\r\n    }\r\n    SocialsIsSupportsNativePosts() {\r\n        return this.toUnity(this.gp.socials.isSupportsNativePosts);\r\n    }\r\n    SocialsIsSupportsNativeInvite() {\r\n        return this.toUnity(this.gp.socials.isSupportsNativeInvite);\r\n    }\r\n    SocialsCanJoinCommunity() {\r\n        return this.toUnity(this.gp.socials.canJoinCommunity);\r\n    }\r\n    SocialsIsSupportsNativeCommunityJoin() {\r\n        return this.toUnity(this.gp.socials.isSupportsNativeCommunityJoin);\r\n    }\r\n\r\n    // games collections\r\n    GamesCollectionsOpen(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag || 'ANY' };\r\n        return this.gp.gamesCollections.open(query);\r\n    }\r\n    GamesCollectionsFetch(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.gamesCollections\r\n            .fetch(query)\r\n            .then((result) => {\r\n                this.trigger('CallGamesCollectionsFetchTag', idOrTag);\r\n                this.trigger('CallGamesCollectionsFetch', JSON.stringify(result));\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallGamesCollectionsFetchError');\r\n            });\r\n    }\r\n\r\n    ChangeLanguage(language) {\r\n        return this.gp.changeLanguage(language);\r\n    }\r\n    ChangeLanguageByCode(language = '') {\r\n        return this.gp.changeLanguage(language.toLowerCase());\r\n    }\r\n    ChangeAvatarGenerator(generator) {\r\n        return this.gp.changeAvatarGenerator(generator);\r\n    }\r\n    LoadOverlay() {\r\n        return this.gp.loadOverlay();\r\n    }\r\n\r\n    // GAME\r\n    IsPaused() {\r\n        return this.toUnity(this.gp.isPaused);\r\n    }\r\n\r\n    Pause() {\r\n        return this.gp.pause();\r\n    }\r\n    Resume() {\r\n        return this.gp.resume();\r\n    }\r\n\r\n    GameplayStart() {\r\n        return this.gp.gameplayStart();\r\n    }\r\n    GameplayStop() {\r\n        return this.gp.gameplayStop();\r\n    }\r\n\r\n\r\n    // GAME\r\n\r\n\r\n    //Device\r\n    IsMobile() {\r\n        return this.toUnity(this.gp.isMobile);\r\n    }\r\n    //Device\r\n\r\n\r\n    // Server\r\n    ServerTime() {\r\n        return this.toUnity(this.gp.serverTime);\r\n    }\r\n    // Server\r\n\r\n\r\n\r\n    // System\r\n    IsDev() {\r\n        return this.toUnity(this.gp.isDev);\r\n    }\r\n\r\n    IsAllowedOrigin() {\r\n        return this.toUnity(this.gp.isAllowedOrigin);\r\n    }\r\n    // System\r\n\r\n\r\n\r\n    // Variables\r\n    VariablesFetch() {\r\n        return this.gp.variables\r\n            .fetch()\r\n            .then((result) => {\r\n                this.trigger('CallVariablesFetchSuccess', JSON.stringify(result));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallVariablesFetchError');\r\n            });\r\n    }\r\n\r\n    VariablesHas(key) {\r\n        return this.toUnity(this.gp.variables.has(key));\r\n    }\r\n\r\n    VariablesGet(key) {\r\n        return this.toUnity(this.gp.variables.get(key));\r\n    }\r\n    // Variables\r\n\r\n\r\n\r\n    // Players\r\n    PlayersFetch(key) {\r\n        var obj = JSON.parse(key);\r\n        let ids = [];\r\n\r\n        if (parseInt(obj, 10) > 0) {\r\n            ids = [parseInt(obj, 10)];\r\n        } else {\r\n            ids = (obj.idsList || obj.idsArray).map(Number).filter(Boolean)\r\n        }\r\n\r\n        this.gp.players.fetch({ ids })\r\n            .then((result) => {\r\n                this.trigger('CallPlayersFetchSuccess', JSON.stringify(result.players));\r\n            }).catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPlayersFetchError');\r\n            });\r\n    }\r\n    //Players\r\n\r\n\r\n    // Documents\r\n    DocumentsOpen() {\r\n        this.gp.documents.open({ type: 'PLAYER_PRIVACY_POLICY' });\r\n    }\r\n\r\n    DocumentsFetch() {\r\n        this.gp.documents.fetch({\r\n            type: 'PLAYER_PRIVACY_POLICY',\r\n            format: 'TXT'\r\n        });\r\n    }\r\n    // Documents\r\n\r\n\r\n\r\n\r\n\r\n    // Files\r\n    FilesUpload(tags) {\r\n        this.gp.files\r\n            .upload({\r\n                tags: tags\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .then((result) => {\r\n                this.trigger('CallFilesUploadSuccess', JSON.stringify(result));\r\n            })\r\n            .catch((err) => {\r\n                this.trigger('CallFilesUploadError');\r\n            });\r\n    }\r\n\r\n    FilesUploadUrl(url, filename, tags) {\r\n        this.gp.files\r\n            .uploadUrl({\r\n                url,\r\n                filename,\r\n                tags: tags\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .then((result) => {\r\n                this.trigger('CallFilesUploadUrlSuccess', JSON.stringify(result));\r\n            })\r\n            .catch((err) => {\r\n                this.trigger('CallFilesUploadUrlError');\r\n            });\r\n    }\r\n\r\n    FilesUploadContent(content, filename, tags) {\r\n        this.gp.files\r\n            .uploadContent({\r\n                content,\r\n                filename,\r\n                tags: tags\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .then((result) => {\r\n                this.trigger('CallFilesUploadContentSuccess', JSON.stringify(result));\r\n            })\r\n            .catch((err) => {\r\n                this.trigger('CallFilesUploadContentError');\r\n            });\r\n    }\r\n\r\n    FilesLoadContent(url) {\r\n        this.gp.files\r\n            .loadContent(url)\r\n            .then((result) => {\r\n                this.trigger('CallFilesLoadContentSuccess', result);\r\n            })\r\n            .catch((err) => {\r\n                this.trigger('CallFilesLoadContentError');\r\n            });\r\n    }\r\n\r\n    FilesChooseFile(type) {\r\n        this.gp.files\r\n            .chooseFile(type)\r\n            .then((result) => {\r\n                this.trigger('CallFilesChooseFile', result.tempUrl);\r\n            })\r\n            .catch((err) => {\r\n                this.trigger('CallFilesChooseFileError');\r\n            });\r\n    }\r\n\r\n    FilesFetch(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.files.fetch(query)\r\n            .then((result) => {\r\n                this.trigger('CallFilesFetchCanLoadMore', result.canLoadMore);\r\n                this.trigger('CallFilesFetchSuccess', JSON.stringify(result.items));\r\n            })\r\n            .catch((err) => {\r\n                this.trigger('CallFilesFetchError');\r\n            });\r\n    }\r\n\r\n    FilesFetchMore(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.files.fetchMore(query)\r\n            .then((result) => {\r\n                this.trigger('CallFilesFetchMoreCanLoadMore', result.canLoadMore);\r\n                this.trigger('CallFilesFetchMoreSuccess', JSON.stringify(result.items));\r\n            })\r\n            .catch((err) => {\r\n                this.trigger('CallFilesFetchMoreError');\r\n            });\r\n    }\r\n\r\n    // Files\r\n\r\n\r\n    // Channels\r\n\r\n    Channels_Join(channelId, password) {\r\n        this.gp.channels.join({ channelId, password, });\r\n    }\r\n\r\n    Channels_CancelJoin(channelId) {\r\n        this.gp.channels.cancelJoin({ channelId, });\r\n    }\r\n\r\n    Channels_Leave(channelId) {\r\n        this.gp.channels.leave({ channelId, });\r\n    }\r\n\r\n    Channels_Kick(channelId, playerId) {\r\n        this.gp.channels.kick({ channelId, playerId, });\r\n    }\r\n\r\n    Channels_Mute_UnmuteAt(channelId, playerId, unmuteAt) {\r\n        this.gp.channels.mute({ channelId, playerId, unmuteAt, });\r\n    }\r\n\r\n    Channels_Mute_Seconds(channelId, playerId, seconds) {\r\n        this.gp.channels.mute({ channelId, playerId, seconds: Number(seconds), });\r\n    }\r\n\r\n    Channels_UnMute(channelId, playerId) {\r\n        this.gp.channels.unmute({ channelId, playerId, });\r\n    }\r\n\r\n    Channels_SendInvite(channelId, playerId) {\r\n        this.gp.channels.sendInvite({ channelId, playerId, });\r\n    }\r\n\r\n    Channels_CancelInvite(channelId, playerId) {\r\n        this.gp.channels.cancelInvite({ channelId, playerId, });\r\n    }\r\n\r\n    Channels_AcceptInvite(channelId) {\r\n        this.gp.channels.acceptInvite({ channelId, });\r\n    }\r\n\r\n    Channels_RejectInvite(channelId) {\r\n        this.gp.channels.rejectInvite({ channelId });\r\n    }\r\n\r\n    Channels_FetchInvites(limit, offset) {\r\n        this.gp.channels.fetchInvites({ limit, offset, });\r\n    }\r\n\r\n    Channels_FetchMoreInvites(limit) {\r\n        this.gp.channels.fetchMoreInvites({ limit, });\r\n    }\r\n\r\n    Channels_FetchChannelInvites(channelId, limit, offset) {\r\n        this.gp.channels.fetchChannelInvites({ channelId, limit, offset, });\r\n    }\r\n\r\n    Channels_FetchMoreChannelInvites(channelId, limit) {\r\n        this.gp.channels.fetchMoreChannelInvites({ channelId, limit, });\r\n    }\r\n\r\n    Channels_FetchSentInvites(channelId, limit, offset) {\r\n        this.gp.channels.fetchSentInvites({ channelId, limit, offset, });\r\n    }\r\n\r\n    Channels_FetchMoreSentInvites(channelId, limit) {\r\n        this.gp.channels.fetchMoreSentInvites({ channelId, limit, });\r\n    }\r\n\r\n    Channels_AcceptJoinRequest(channelId, playerId) {\r\n        this.gp.channels.acceptJoinRequest({ channelId, playerId, });\r\n    }\r\n\r\n    Channels_RejectJoinRequest(channelId, playerId) {\r\n        this.gp.channels.rejectJoinRequest({ channelId, playerId, });\r\n    }\r\n\r\n    Channels_FetchJoinRequests(channelId, limit, offset) {\r\n        this.gp.channels.fetchJoinRequests({ channelId, limit, offset });\r\n    }\r\n\r\n    Channels_FetchMoreJoinRequests(channelId, limit) {\r\n        this.gp.channels.fetchMoreJoinRequests({ channelId, limit, });\r\n    }\r\n\r\n    Channels_FetchSentJoinRequests(channelId, limit, offset) {\r\n        this.gp.channels.fetchSentJoinRequests({ channelId, limit, offset, });\r\n    }\r\n\r\n    Channels_FetchMoreSentJoinRequests(channelId, limit) {\r\n        this.gp.channels.fetchMoreSentJoinRequests({ channelId, limit, });\r\n    }\r\n\r\n    Channels_SendMessage(channelId, text, tags) {\r\n        this.gp.channels.sendMessage({\r\n            channelId,\r\n            text,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n        });\r\n    }\r\n\r\n    Channels_SendPersonalMessage(playerId, text, tags) {\r\n        this.gp.channels.sendPersonalMessage({\r\n            playerId,\r\n            text,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n        });\r\n    }\r\n\r\n    Channels_SendFeedMessage(playerId, text, tags) {\r\n        this.gp.channels.sendFeedMessage({\r\n            playerId,\r\n            text,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n        });\r\n    }\r\n\r\n    Channels_EditMessage(messageId, text) {\r\n        this.gp.channels.editMessage({ messageId, text, });\r\n    }\r\n\r\n    Channels_DeleteMessage(messageId) {\r\n        this.gp.channels.deleteMessage({ messageId });\r\n    }\r\n\r\n    Channels_FetchMessages(channelId, tags, limit, offset) {\r\n        this.gp.channels.fetchMessages({\r\n            channelId,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n            limit,\r\n            offset,\r\n        }).then((result) => {\r\n            this.trigger('CallOnFetchMessagesCanLoadMore', JSON.stringify(result.canLoadMore));\r\n            this.trigger('CallOnFetchMessages', JSON.stringify(result.items));\r\n\r\n        }).catch((err) => {\r\n            console.warn(err);\r\n            this.trigger('CallOnFetchMessagesError');\r\n        });\r\n    }\r\n\r\n    Channels_FetchPersonalMessages(playerId, tags, limit, offset) {\r\n        this.gp.channels.fetchPersonalMessages({\r\n            playerId,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n            limit,\r\n            offset,\r\n        }).then((result) => {\r\n            this.trigger('CallOnFetchPersonalMessagesCanLoadMore', JSON.stringify(result.canLoadMore));\r\n            this.trigger('CallOnFetchPersonalMessages', JSON.stringify(result.items));\r\n        }).catch((err) => {\r\n            console.warn(err);\r\n            this.trigger('CallOnFetchPersonalMessagesError');\r\n        });\r\n    }\r\n\r\n    Channels_FetchFeedMessages(playerId, tags, limit, offset) {\r\n        this.gp.channels.fetchFeedMessages({\r\n            playerId,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n            limit,\r\n            offset,\r\n        }).then((result) => {\r\n            this.trigger('CallOnFetchFeedMessagesCanLoadMore', JSON.stringify(result.canLoadMore));\r\n            this.trigger('CallOnFetchFeedMessages', JSON.stringify(result.items));\r\n        }).catch((err) => {\r\n            console.warn(err);\r\n            this.trigger('CallOnFetchFeedMessagesError');\r\n        });\r\n    }\r\n\r\n    Channels_FetchMoreMessages(channelId, tags, limit) {\r\n        this.gp.channels.fetchMoreMessages({\r\n            channelId,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n            limit,\r\n        }).then((result) => {\r\n            this.trigger('CallOnFetchMoreMessagesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreMessages', JSON.stringify(result.items));\r\n        }).catch((err) => {\r\n            console.warn(err);\r\n            this.trigger('CallOnFetchMoreMessagesError');\r\n        });\r\n    }\r\n\r\n    Channels_FetchMorePersonalMessages(playerId, tags, limit) {\r\n        this.gp.channels.fetchMorePersonalMessages({\r\n            playerId,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n            limit,\r\n        }).then((result) => {\r\n            this.trigger('CallOnFetchMorePersonalMessagesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMorePersonalMessages', JSON.stringify(result.items));\r\n        }).catch((err) => {\r\n            console.warn(err);\r\n            this.trigger('CallOnFetchMorePersonalMessagesError');\r\n        });\r\n    }\r\n\r\n    Channels_FetchMoreFeedMessages(playerId, tags, limit) {\r\n        this.gp.channels.fetchMoreFeedMessages({\r\n            playerId,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n            limit,\r\n        }).then((result) => {\r\n            this.trigger('CallOnFetchMoreFeedMessagesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreFeedMessages', JSON.stringify(result.items));\r\n        }).catch((err) => {\r\n            console.warn(err);\r\n            this.trigger('CallOnFetchMoreFeedMessagesError');\r\n        });\r\n    }\r\n\r\n    Channels_DeleteChannel(channelId) {\r\n        this.gp.channels.deleteChannel({ channelId, });\r\n    }\r\n\r\n    Channels_FetchChannel(channelId) {\r\n        this.gp.channels.fetchChannel({ channelId, });\r\n    }\r\n\r\n\r\n\r\n    Channels_CreateChannel(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.channels.createChannel({ ...query, private: query.ch_private });\r\n    }\r\n\r\n    Channels_UpdateChannel(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.channels.updateChannel({ ...query, private: query.ch_private });\r\n    }\r\n\r\n    Channels_FetchChannels(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.channels.fetchChannels(query);\r\n    }\r\n\r\n    Channels_FetchMoreChannels(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.channels.fetchMoreChannels(query);\r\n    }\r\n    Channels_FetchMembers(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.channels.fetchMembers(query);\r\n    }\r\n    Channels_FetchMoreMembers(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.channels.fetchMoreMembers(query);\r\n    }\r\n\r\n    // Channels\r\n}\r\nfunction mapChannel(channel = {}) {\r\n    return {\r\n        ...channel,\r\n        ch_private: channel.private\r\n    };\r\n}\r\n\r\nfunction mapItemWithChannel(item = {}) {\r\n    return {\r\n        ...item,\r\n        channel: mapChannel(item.channel)\r\n    };\r\n}\r\nwindow.GamePushUnity = GamePushUnity;\r\n","import GamePushUnity from './GamePushUnity'\r\n\r\nwindow.GamePushUnity = GamePushUnity;\r\n"],"names":["GamePushUnity","constructor","gp","unity","this","player","ready","then","trigger","on","success","JSON","stringify","fields","map","field","defaultValue","default","leaderboard","achievements","window","focus","gamesCollections","fullscreen","ads","lastRewardedTag","socials","lang","ag","documents","document","content","channels","channel","mapChannel","err","id","result","canLoadMore","items","member","joinRequest","memberLeave","mute","invite","mapItemWithChannel","message","eventName","value","SendMessage","toUnity","String","mapItemsWithChannel","ch_private","private","Language","language","AvatarGenerator","avatarGenerator","PlatformType","platform","type","PlatformHasIntegratedAuth","hasIntegratedAuth","PlatformIsExternalLinksAllowed","isExternalLinksAllowed","AppTitle","app","title","AppDescription","description","AppImage","image","AppUrl","url","PlayerGetID","PlayerGetScore","score","PlayerSetScore","Number","PlayerAddScore","PlayerGetName","name","PlayerSetName","PlayerGetAvatar","avatar","PlayerSetAvatar","src","PlayerGet","key","get","PlayerSetString","set","PlayerSetNumber","PlayerSetBool","PlayerAdd","add","PlayerHas","has","PlayerSetFlag","Boolean","PlayerToggle","toggle","PlayerGetFieldName","getFieldName","PlayerGetFieldVariantName","getFieldVariantName","PlayerGetFieldVariantAt","index","variant","getField","variants","PlayerGetFieldVariantIndex","findIndex","v","PlayerReset","reset","PlayerRemove","remove","PlayerSync","override","sync","PlayerLoad","load","PlayerLogin","login","PlayerFetchFields","fetchFields","PlayerIsLoggedIn","isLoggedIn","PlayerHasAnyCredentials","hasAnyCredentials","PlayerIsStub","isStub","LeaderboardOpen","orderBy","order","limit","withMe","includeFields","displayFields","open","split","o","trim","filter","f","catch","console","warn","LeaderboardFetch","tag","fetch","leaderboardInfo","players","LeaderboardFetchPlayerRating","fetchPlayerRating","position","LeaderboardScopedOpen","idOrTag","parseInt","query","openScoped","LeaderboardScopedFetch","fetchScoped","leaderboardScopedInfo","LeaderboardScopedPublishRecord","key1","value1","key2","value2","key3","value3","publishRecord","record","LeaderboardScopedFetchPlayerRating","fetchPlayerRatingScoped","AchievementsOpen","AchievementsFetch","achievementsGroups","playerAchievements","AchievementsUnlock","unlock","AchievementsSetProgress","progress","setProgress","AchievementsHas","AchievementsGetProgress","getProgress","PaymentsFetchProducts","payments","fetchProducts","products","playerPurchases","PaymentsPurchase","purchase","PaymentsConsume","consume","PaymentsIsAvailable","isAvailable","PaymentsIsSubscriptionsAvailable","isSubscriptionsAvailable","PaymentsSubscribe","subscribe","PaymentsUnsubscribe","unsubscribe","FullscreenOpen","FullscreenClose","close","FullscreenToggle","AdsShowFullscreen","showFullscreen","AdsShowRewarded","showRewardedVideo","AdsShowPreloader","showPreloader","AdsShowSticky","showSticky","AdsCloseSticky","closeSticky","AdsRefreshSticky","refreshSticky","AdsIsAdblockEnabled","isAdblockEnabled","AdsIsStickyAvailable","isStickyAvailable","AdsIsFullscreenAvailable","isFullscreenAvailable","AdsIsRewardedAvailable","isRewardedAvailable","AdsIsPreloaderAvailable","isPreloaderAvailable","AdsIsStickyPlaying","isStickyPlaying","AdsIsFullscreenPlaying","isFullscreenPlaying","AdsIsRewardedPlaying","isRewardedPlaying","AdsIsPreloaderPlaying","isPreloaderPlaying","AnalyticsHit","analytics","hit","AnalyticsGoal","event","goal","SocialsShare","text","share","SocialsPost","post","SocialsInvite","SocialsJoinCommunity","joinCommunity","SocialsCommunityLink","communityLink","SocialsIsSupportsShare","isSupportsShare","SocialsIsSupportsNativeShare","isSupportsNativeShare","SocialsIsSupportsNativePosts","isSupportsNativePosts","SocialsIsSupportsNativeInvite","isSupportsNativeInvite","SocialsCanJoinCommunity","canJoinCommunity","SocialsIsSupportsNativeCommunityJoin","isSupportsNativeCommunityJoin","GamesCollectionsOpen","GamesCollectionsFetch","ChangeLanguage","changeLanguage","ChangeLanguageByCode","toLowerCase","ChangeAvatarGenerator","generator","changeAvatarGenerator","LoadOverlay","loadOverlay","IsPaused","isPaused","Pause","pause","Resume","resume","GameplayStart","gameplayStart","GameplayStop","gameplayStop","IsMobile","isMobile","ServerTime","serverTime","IsDev","isDev","IsAllowedOrigin","isAllowedOrigin","VariablesFetch","variables","VariablesHas","VariablesGet","PlayersFetch","obj","parse","ids","idsList","idsArray","DocumentsOpen","DocumentsFetch","format","FilesUpload","tags","files","upload","FilesUploadUrl","filename","uploadUrl","FilesUploadContent","uploadContent","FilesLoadContent","loadContent","FilesChooseFile","chooseFile","tempUrl","FilesFetch","FilesFetchMore","fetchMore","Channels_Join","channelId","password","join","Channels_CancelJoin","cancelJoin","Channels_Leave","leave","Channels_Kick","playerId","kick","Channels_Mute_UnmuteAt","unmuteAt","Channels_Mute_Seconds","seconds","Channels_UnMute","unmute","Channels_SendInvite","sendInvite","Channels_CancelInvite","cancelInvite","Channels_AcceptInvite","acceptInvite","Channels_RejectInvite","rejectInvite","Channels_FetchInvites","offset","fetchInvites","Channels_FetchMoreInvites","fetchMoreInvites","Channels_FetchChannelInvites","fetchChannelInvites","Channels_FetchMoreChannelInvites","fetchMoreChannelInvites","Channels_FetchSentInvites","fetchSentInvites","Channels_FetchMoreSentInvites","fetchMoreSentInvites","Channels_AcceptJoinRequest","acceptJoinRequest","Channels_RejectJoinRequest","rejectJoinRequest","Channels_FetchJoinRequests","fetchJoinRequests","Channels_FetchMoreJoinRequests","fetchMoreJoinRequests","Channels_FetchSentJoinRequests","fetchSentJoinRequests","Channels_FetchMoreSentJoinRequests","fetchMoreSentJoinRequests","Channels_SendMessage","sendMessage","Channels_SendPersonalMessage","sendPersonalMessage","Channels_SendFeedMessage","sendFeedMessage","Channels_EditMessage","messageId","editMessage","Channels_DeleteMessage","deleteMessage","Channels_FetchMessages","fetchMessages","Channels_FetchPersonalMessages","fetchPersonalMessages","Channels_FetchFeedMessages","fetchFeedMessages","Channels_FetchMoreMessages","fetchMoreMessages","Channels_FetchMorePersonalMessages","fetchMorePersonalMessages","Channels_FetchMoreFeedMessages","fetchMoreFeedMessages","Channels_DeleteChannel","deleteChannel","Channels_FetchChannel","fetchChannel","Channels_CreateChannel","createChannel","Channels_UpdateChannel","updateChannel","Channels_FetchChannels","fetchChannels","Channels_FetchMoreChannels","fetchMoreChannels","Channels_FetchMembers","fetchMembers","Channels_FetchMoreMembers","fetchMoreMembers","item"],"sourceRoot":""}